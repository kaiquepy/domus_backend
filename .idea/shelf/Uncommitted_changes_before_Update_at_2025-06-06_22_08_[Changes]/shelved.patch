Index: domus_backend/routers/users.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># domus_backend/routers/users.py\n\nfrom fastapi import APIRouter, Depends, HTTPException, status\nfrom sqlalchemy.orm import Session\n\nfrom domus_backend.database import get_session\nfrom domus_backend.models import User\nfrom domus_backend.schemas import UserCreate, UserPublic\n\n\nrouter = APIRouter(prefix='/users', tags=['users'])\n\n\n@router.get('/', response_model=list[UserPublic])\ndef get_users(session: Session = Depends(get_session)):\n    users = session.query(User).all()\n    return users\n\n\n@router.post('/', response_model=UserPublic, status_code=status.HTTP_201_CREATED)\ndef create_user(user: UserCreate, session: Session = Depends(get_session)):\n    db_user = session.query(User).filter(User.email == user.email).first()\n    if db_user:\n        raise HTTPException(\n            status_code=status.HTTP_400_BAD_REQUEST,\n            detail=\"Email already registered\",\n        )\n\n    # A senha agora é salva diretamente como veio na requisição\n    db_user = User(\n        nome=user.nome,\n        email=user.email,\n        password=user.password  # <<< VOLTOU A SALVAR A SENHA EM TEXTO PURO\n    )\n\n    session.add(db_user)\n    session.commit()\n    session.refresh(db_user)\n\n    return db_user
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/domus_backend/routers/users.py b/domus_backend/routers/users.py
--- a/domus_backend/routers/users.py	(revision ac1555891eab9b45af0f329a3b78ae442c9c6b9d)
+++ b/domus_backend/routers/users.py	(date 1749258401503)
@@ -1,16 +1,12 @@
-# domus_backend/routers/users.py
-
 from fastapi import APIRouter, Depends, HTTPException, status
 from sqlalchemy.orm import Session
 
 from domus_backend.database import get_session
 from domus_backend.models import User
-from domus_backend.schemas import UserCreate, UserPublic
-
+from domus_backend.schemas import UserCreate, UserPublic, UserUpdate
 
 router = APIRouter(prefix='/users', tags=['users'])
 
-
 @router.get('/', response_model=list[UserPublic])
 def get_users(session: Session = Depends(get_session)):
     users = session.query(User).all()
@@ -26,15 +22,44 @@
             detail="Email already registered",
         )
 
-    # A senha agora é salva diretamente como veio na requisição
     db_user = User(
         nome=user.nome,
         email=user.email,
-        password=user.password  # <<< VOLTOU A SALVAR A SENHA EM TEXTO PURO
+        password=user.password
     )
-
+    
     session.add(db_user)
     session.commit()
     session.refresh(db_user)
+    
+    return db_user
 
-    return db_user
\ No newline at end of file
+@router.put('/{user_id}', response_model=UserPublic)
+def update_user(
+    user_id: int, user_update: UserUpdate, session: Session = Depends(get_session)
+):
+    db_user = session.query(User).filter(User.id == user_id).first()
+    if not db_user:
+        raise HTTPException(
+            status_code=status.HTTP_404_NOT_FOUND, detail="User not found"
+        )
+
+    for key, value in user_update.model_dump(exclude_unset=True).items():
+        setattr(db_user, key, value)
+
+    session.add(db_user)
+    session.commit()
+    session.refresh(db_user)
+    return db_user
+
+
+@router.delete('/{user_id}', status_code=status.HTTP_204_NO_CONTENT)
+def delete_user(user_id: int, session: Session = Depends(get_session)):
+    db_user = session.query(User).filter(User.id == user_id).first()
+    if not db_user:
+        raise HTTPException(
+            status_code=status.HTTP_404_NOT_FOUND, detail="User not found"
+        )
+
+    session.delete(db_user)
+    session.commit()
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"1175e43f-082f-4009-ac04-5846db57435b\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/compose.yaml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/compose.yaml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/domus_backend/app.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/domus_backend/app.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/domus_backend/routers/auth.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/domus_backend/routers/auth.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/domus_backend/routers/users.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/domus_backend/routers/users.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/domus_backend/settings.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/domus_backend/settings.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"router-usuario\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;charrualavinia&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\n  \"selectedUrlAndAccountId\": {\n    \"url\": \"https://github.com/kaiquepy/domus_backend\",\n    \"accountId\": \"e6fa47b7-c6a7-4395-9cea-dae043bd51b0\"\n  }\n}]]></component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;customColor&quot;: &quot;&quot;,\n  &quot;associatedIndex&quot;: 7\n}</component>\n  <component name=\"ProjectId\" id=\"2xehe57cwTkwpgJBoC2h7svQBI8\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Docker.Dockerfile.executor&quot;: &quot;Run&quot;,\n    &quot;Docker.compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,\n    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RunManager\" selected=\"Docker.Dockerfile\">\n    <configuration name=\"Dockerfile\" type=\"docker-deploy\" factoryName=\"dockerfile\" temporary=\"true\" server-name=\"Docker\">\n      <deployment type=\"dockerfile\">\n        <settings>\n          <option name=\"sourceFilePath\" value=\"Dockerfile\" />\n        </settings>\n      </deployment>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"compose.yaml: Compose Deployment\" type=\"docker-deploy\" factoryName=\"docker-compose.yml\" temporary=\"true\" server-name=\"Docker\">\n      <deployment type=\"docker-compose.yml\">\n        <settings>\n          <option name=\"envFilePath\" value=\"\" />\n          <option name=\"sourceFilePath\" value=\"compose.yaml\" />\n        </settings>\n      </deployment>\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Docker.Dockerfile\" />\n      <item itemvalue=\"Docker.compose.yaml: Compose Deployment\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Docker.Dockerfile\" />\n        <item itemvalue=\"Docker.compose.yaml: Compose Deployment\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-js-predefined-d6986cc7102b-6a121458b545-JavaScript-PY-251.25410.159\" />\n        <option value=\"bundled-python-sdk-e0ed3721d81e-36ea0e71a18c-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.25410.159\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SvnConfiguration\">\n    <configuration>$PROJECT_DIR$/../.subversion</configuration>\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"1175e43f-082f-4009-ac04-5846db57435b\" name=\"Changes\" comment=\"\" />\n      <created>1748304541899</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1748304541899</updated>\n      <workItem from=\"1748304545102\" duration=\"1119000\" />\n      <workItem from=\"1748381858415\" duration=\"1411000\" />\n      <workItem from=\"1748384773107\" duration=\"2002000\" />\n      <workItem from=\"1749165859575\" duration=\"695000\" />\n      <workItem from=\"1749166585436\" duration=\"308000\" />\n      <workItem from=\"1749166940991\" duration=\"80000\" />\n      <workItem from=\"1749167031913\" duration=\"72000\" />\n      <workItem from=\"1749167115762\" duration=\"2523000\" />\n      <workItem from=\"1749253872654\" duration=\"4021000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ac1555891eab9b45af0f329a3b78ae442c9c6b9d)
+++ b/.idea/workspace.xml	(date 1749258401867)
@@ -5,12 +5,9 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="1175e43f-082f-4009-ac04-5846db57435b" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/compose.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/compose.yaml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/domus_backend/app.py" beforeDir="false" afterPath="$PROJECT_DIR$/domus_backend/app.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/domus_backend/routers/auth.py" beforeDir="false" afterPath="$PROJECT_DIR$/domus_backend/routers/auth.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/domus_backend/routers/users.py" beforeDir="false" afterPath="$PROJECT_DIR$/domus_backend/routers/users.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/domus_backend/settings.py" beforeDir="false" afterPath="$PROJECT_DIR$/domus_backend/settings.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/domus_backend/schemas.py" beforeDir="false" afterPath="$PROJECT_DIR$/domus_backend/schemas.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -56,23 +53,23 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Docker.Dockerfile.executor&quot;: &quot;Run&quot;,
-    &quot;Docker.compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,
-    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Docker.Dockerfile.executor": "Run",
+    "Docker.compose.yaml: Compose Deployment.executor": "Run",
+    "ModuleVcsDetector.initialDetectionPerformed": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.git.unshallow": "true",
+    "git-widget-placeholder": "Merging main",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "preferences.lookFeel",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RunManager" selected="Docker.Dockerfile">
     <configuration name="Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
       <deployment type="dockerfile">
@@ -128,7 +125,7 @@
       <workItem from="1749166940991" duration="80000" />
       <workItem from="1749167031913" duration="72000" />
       <workItem from="1749167115762" duration="2523000" />
-      <workItem from="1749253872654" duration="4021000" />
+      <workItem from="1749253872654" duration="4529000" />
     </task>
     <servers />
   </component>
Index: domus_backend/schemas.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from pydantic import BaseModel, EmailStr\n\nclass UserPublic(BaseModel):\n    id: int\n    nome: str\n    email: EmailStr\n    tipo: str\n\n    class Config:\n        from_attributes = True\n\n\nclass UserCreate(BaseModel):\n    nome: str\n    email: EmailStr\n    password: str\n    tipo: str = \"morador\"\n\n    class Config:\n        from_attributes = True\n\nclass Token(BaseModel):\n    access_token: str\n    token_type: str
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/domus_backend/schemas.py b/domus_backend/schemas.py
--- a/domus_backend/schemas.py	(revision ac1555891eab9b45af0f329a3b78ae442c9c6b9d)
+++ b/domus_backend/schemas.py	(date 1749258326707)
@@ -1,5 +1,11 @@
 from pydantic import BaseModel, EmailStr
 
+class UserUpdate(BaseModel):
+    nome: str | None = None
+    email: EmailStr | None = None
+    password: str | None = None
+    tipo: str | None = None
+
 class UserPublic(BaseModel):
     id: int
     nome: str
